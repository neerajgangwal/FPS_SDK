import com.nitgen.SDK.BSP.NBioBSPJNI;
import com.nitgen.SDK.BSP.NBioBSPNFIQJNI;


public class NBioNFIQTest extends javax.swing.JDialog {

    public NBioNFIQTest(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                Closing();
                System.exit(0);
            }
        });
        
        BSP = new NBioBSPJNI();
        
        if (BSP.IsErrorOccured())  {
            jTextArea1.setText("NBioBSP Error Occured [" + BSP.GetErrorCode() + "]\n");
        }
        else  {
            EXPORTENGINE = BSP.new Export();
            this.jTextArea1.setText("NBioBSP Version: " + BSP.GetVersion() + "\n");
        }
        
        IsWindow = isWindows();
    }

    @Override
    public void dispose()
    {
        if (BSP != null) {
            BSP.dispose();
            BSP = null;
        }
    }

    public void Closing()
    {
        dispose();
    }
    
    public static boolean isWindows()
    {
        String os = System.getProperty("os.name").toLowerCase();
        
        return (os.indexOf("win") >= 0);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("NBioAPI_EXPORT_AUDIT_DATA ==> NFIQ");
        jButton1.setActionCommand("AduitConv");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("RAW DATA ==> NFIQ");
        jButton2.setActionCommand("RawConv");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int nRet = BSP.OpenDevice();

        jTextArea1.setText("");
        jTextArea1.setText("NBioBSP Export Data check\n");
        
        if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
            NBioBSPJNI.FIR_HANDLE hNewFIR = BSP.new FIR_HANDLE();
            NBioBSPJNI.FIR_HANDLE hAuditFIR = BSP.new FIR_HANDLE();
            
            if (IsWindow)
                nRet = BSP.Enroll(null, hNewFIR, null, -1, hAuditFIR, null);
            else
                nRet = BSP.Capture(NBioBSPJNI.FIR_PURPOSE.VERIFY, hNewFIR, -1, hAuditFIR, null);

            if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                NBioBSPJNI.INPUT_FIR inputFIR = BSP.new INPUT_FIR();
                NBioBSPJNI.Export.AUDIT exportAudit = EXPORTENGINE.new AUDIT();

                jTextArea1.append("Enroll Success\n");
                
                inputFIR.SetFIRHandle(hAuditFIR);
                nRet = EXPORTENGINE.ExportAudit(inputFIR, exportAudit);

                if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                    NBioBSPNFIQJNI.NFIQINFO NFIQV = NBioBSPNFIQJNI.Allocater.new NFIQINFO();
                    
                    jTextArea1.append("Export image sucess\n");
                    
                    nRet = NBioBSPNFIQJNI.NFIQFromNBioBSP(exportAudit, NFIQV);

                    if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                        int i;
                        
                        jTextArea1.append("NFIQ Qualit Data =========================================\n");

                        for (i = 0; i < 11; i++)  {
                            jTextArea1.append("NFIQ [" + i + "][0]: " + NFIQV.Quality[i][0] + "\n");
                            jTextArea1.append("NFIQ [" + i + "][1]: " + NFIQV.Quality[i][1] + "\n");
                        }
                    }
                    else  {
                        jTextArea1.append("NFIQFromNBioBSP Error: " + nRet + "\n");
                    }
                }
                else  {
                    jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
                }
                
                hNewFIR.dispose();
                hAuditFIR.dispose();
            }
            else  {
                jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
            }

            BSP.CloseDevice();
        }
        else  {
            jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int nRet = BSP.OpenDevice();

        jTextArea1.setText("");
        jTextArea1.setText("Raw Image Data check\n");
        
        if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
            NBioBSPJNI.FIR_HANDLE hNewFIR = BSP.new FIR_HANDLE();
            NBioBSPJNI.FIR_HANDLE hAuditFIR = BSP.new FIR_HANDLE();
            
            nRet = BSP.Capture(NBioBSPJNI.FIR_PURPOSE.VERIFY, hNewFIR, -1, hAuditFIR, null);

            if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                NBioBSPJNI.INPUT_FIR inputFIR = BSP.new INPUT_FIR();
                NBioBSPJNI.Export.AUDIT exportAudit = EXPORTENGINE.new AUDIT();

                jTextArea1.append("Capture Success\n");
                
                inputFIR.SetFIRHandle(hAuditFIR);
                nRet = EXPORTENGINE.ExportAudit(inputFIR, exportAudit);

                if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                    java.lang.Integer NFIQV = new java.lang.Integer(0);
                    
                    jTextArea1.append("Export image sucess\n");
                    
                    nRet = NBioBSPNFIQJNI.NFIQFromRaw(exportAudit.FingerData[0].Template[0].Data, exportAudit.ImageWidth, exportAudit.ImageHeight, NFIQV);

                    if (nRet == NBioBSPJNI.ERROR.NBioAPIERROR_NONE)  {
                        jTextArea1.append("NFIQ Qualit Data =========================================\n");
                        jTextArea1.append("NFIQ : " + NFIQV + "\n");
                    }
                    else  {
                        jTextArea1.append("NFIQFromRaw Error: " + nRet + "\n");
                    }
                }
                else  {
                    jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
                }
                
                hNewFIR.dispose();
                hAuditFIR.dispose();
            }
            else  {
                jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
            }

            BSP.CloseDevice();
        }
        else  {
            jTextArea1.append("NBioBSP Error: " + BSP.GetErrorCode() + "\n");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NBioNFIQTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NBioNFIQTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NBioNFIQTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NBioNFIQTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NBioNFIQTest dialog = new NBioNFIQTest(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }
    
    NBioBSPJNI                  BSP;
    NBioBSPJNI.Export           EXPORTENGINE;
    boolean                     IsWindow;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
